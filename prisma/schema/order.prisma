enum OrderType {
  ONLINE_SHIP
  ONLINE_PICKUP
  IN_PERSON
  DRAFT
  MANUAL_SHIP
  MANUAL_PICKUP
}

enum OrderStatus {
  DRAFT
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  COMPLETED
  CANCELLED
  REFUNDED
  PARTIAL_REFUND
}




model Order {
  id              String @id @default(cuid())
  storeId         String
  store           Store  @relation("StoreToOrder", fields: [storeId], references: [id])

  orderItems      OrderItem[]
  notes           Note[]
  payments        Payment[]


  fulfillmentId   String? @unique
  fulfillment     Fulfillment? @relation(fields: [fulfillmentId], references: [id], onDelete: SetNull)

  paidInFull      Boolean @default(false)
  paidInFullAt    DateTime?

  orderNumber       String @default(cuid()) @unique
  authorizationCode String @default(cuid())

  status     OrderStatus     @default(DRAFT)
  type       OrderType       @default(ONLINE_SHIP)

  subtotal Int @default(0)
  tax      Int @default(0)
  shipping Int @default(0)
  total    Int @default(0)
  discount Int @default(0)
  fee      Int @default(0)

  receiptLink String @default("")

  

  // 
  // 
  
  email     String      @default("")
  phone     String?     @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  customerId String?
  customer   Customer? @relation(fields: [customerId], references: [id])


  @@index([storeId])
  @@index([customerId])
}

model OrderItem {
  id            String        @id @default(cuid())
  orderId       String
  order         Order         @relation(fields: [orderId], references: [id], onDelete: Cascade)

  name              String        @default("")    //Name of the item (i.e. "T-Shirt")
  description       String?       @db.Text        //Description of the item (i.e. "Blue, Medium")
  quantity          Int           @default(1)

  unitPriceInCents        Int
  discountInCents         Int
  totalPriceInCents       Int  // computed = (unitPrice * quantity) - discount

  metadata Json?


  requestItem   RequestItem? @relation(fields: [requestItemId], references: [id])
  requestItemId String?

  package   Package? @relation(fields: [packageId], references: [id])
  packageId String?

  saleId        String?
  sale          Sale?         @relation(fields: [saleId], references: [id])

  variantId     String?
  variant       Variation?    @relation(fields: [variantId], references: [id])

  @@index([orderId])
  @@index([variantId])
  @@index([saleId])
  @@index([packageId])
  @@index([requestItemId])
}

model Note {
  id            String            @id @default(cuid())
  title         String
  isEditable    Boolean           @default(false)
  description   String?           @db.Text
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  order         Order?            @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId       String?

  @@index([orderId])
}




